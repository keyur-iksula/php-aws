#summary Programmer's reference for class.s3.php (Simple Storage Service).
#labels Phase-Implementation
=class.s3.php=

class.s3.php allows you to interact with Amazon's Simple Storage Service (S3). You can add/remove buckets and keys and query information about them as well. [http://curl.haxx.se/ Curl] is used to enable working with large files.

==Usage==

The following code creates a new S3 object and displays a list of available buckets.

{{{
$s3 = new S3("Your Amazon Key", "Your Secret Amazon Key");
$buckets = $s3->getBuckets();
foreach($buckets as $bucket)
  echo $bucket . "<br/>";
}}}

==Members==

====$_key====
Contains your Amazon key.

====$_secret====
Contains your Amazon secret key.

====$_server====
Fully-qualified URL to Amazon's S3 server. Defaults to http://s3.amazonaws.com. Most likely, this won't ever need to be changed.

====$_pathToCurl====
In order to handle large files efficiently (without loading them into memory), we use [http://curl.haxx.se/ curl] directly at the system shell level. *`$_pathToCurl`* needs to point to curl's location on your system. In most cases, you can simply set this to "curl" as the command in typically available in your path. If that doesn't work, you can locate curl on your system by running `which curl` or `locate curl` at a command prompt.

Future versions will attempt to auto-detect curl's location if the one you specify is not valid (or executable).



====$_hasher====

====$_date====

====$_error====

==Methods==

====__construct()====

====base64()====

====bucketExists()====

====createBucket()====

====deleteBucket()====

====deleteObject()====

====directorySize()====

====downloadObject()====

====getBucketContents()====

====getBuckets()====

====getObject()====

====getObjectHead()====

====getObjectInfo()====

====isOk()====

====objectExists()====

====putObject()====

====sendRequest()====

====signature()====















